/*  */ package emeter

var CurrentAverage = map[int][]byte{
	1:   []byte{0x01, 0x01, 0x04, 0x00}, // Sum active power +
	2:   []byte{0x01, 0x02, 0x04, 0x00}, // Sum active power -
	3:   []byte{0x01, 0x03, 0x04, 0x00}, // Sum reactive power +
	4:   []byte{0x01, 0x04, 0x04, 0x00}, // Sum reactive power -
	9:   []byte{0x01, 0x05, 0x04, 0x00}, // Sum apparent power +
	10:  []byte{0x01, 0x0A, 0x04, 0x00}, // Sum apparent power -
	13:  []byte{0x01, 0x0D, 0x04, 0x00}, // Sum power factor
	21:  []byte{0x01, 0x15, 0x04, 0x00}, // Phase1 active power +
	22:  []byte{0x01, 0x16, 0x04, 0x00}, // Phase1 active power -
	23:  []byte{0x01, 0x17, 0x04, 0x00}, // Phase1 reactive power +
	24:  []byte{0x01, 0x18, 0x04, 0x00}, // Phase1 reactive power -
	29:  []byte{0x01, 0x1D, 0x04, 0x00}, // Phase1 apparent power +
	30:  []byte{0x01, 0x1E, 0x04, 0x00}, // Phase1 apparent power -
	31:  []byte{0x01, 0x1F, 0x04, 0x00}, // Phase1 Electric Current
	32:  []byte{0x01, 0x20, 0x04, 0x00}, // Phase1 Voltage
	33:  []byte{0x01, 0x21, 0x04, 0x00}, // Phase1 Power factor
	41:  []byte{0x01, 0x29, 0x04, 0x00}, // Phase2 active power +
	42:  []byte{0x01, 0x2A, 0x04, 0x00}, // Phase2 active power -
	43:  []byte{0x01, 0x2B, 0x04, 0x00}, // Phase2 reactive power +
	44:  []byte{0x01, 0x2C, 0x04, 0x00}, // Phase2 reactive power -
	49:  []byte{0x01, 0x31, 0x04, 0x00}, // Phase2 apparent power +
	50:  []byte{0x01, 0x32, 0x04, 0x00}, // Phase2 apparent power -
	51:  []byte{0x01, 0x33, 0x04, 0x00}, // Phase2 Electric Current
	52:  []byte{0x01, 0x34, 0x04, 0x00}, // Phase2 Voltage
	53:  []byte{0x01, 0x35, 0x04, 0x00}, // Phase2 Power factor
	61:  []byte{0x01, 0x3D, 0x04, 0x00}, // Phase3 active power +
	62:  []byte{0x01, 0x3E, 0x04, 0x00}, // Phase3 active power -
	63:  []byte{0x01, 0x3F, 0x04, 0x00}, // Phase3 reactive power +
	64:  []byte{0x01, 0x40, 0x04, 0x00}, // Phase3 reactive power -
	69:  []byte{0x01, 0x45, 0x04, 0x00}, // Phase3 apparent power +
	70:  []byte{0x01, 0x46, 0x04, 0x00}, // Phase3 apparent power -
	71:  []byte{0x01, 0x47, 0x04, 0x00}, // Phase3 Electric Current
	72:  []byte{0x01, 0x48, 0x04, 0x00}, // Phase3 Voltage
	73:  []byte{0x01, 0x49, 0x04, 0x00}, // Phase3 Power factor
	127: []byte{0x90, 0x00, 0x00, 0x00}, // Software Version
}

var EnergyDatapoint = map[int][]byte{
	1:  []byte{0x01, 0x01, 0x08, 0x00}, // Sum active energy +
	2:  []byte{0x01, 0x02, 0x08, 0x00}, // Sum active energy -
	3:  []byte{0x01, 0x03, 0x08, 0x00}, // Sum reactive energy +
	4:  []byte{0x01, 0x04, 0x08, 0x00}, // Sum reactive energy -
	9:  []byte{0x01, 0x09, 0x08, 0x00}, // Sum apparent energy +
	10: []byte{0x01, 0x0A, 0x08, 0x00}, // Sum apparent energy -
	21: []byte{0x01, 0x15, 0x08, 0x00}, // Phase1 active energy +
	22: []byte{0x01, 0x16, 0x08, 0x00}, // Phase1 active energy -
	23: []byte{0x01, 0x17, 0x08, 0x00}, // Phase1 reactive energy +
	24: []byte{0x01, 0x18, 0x08, 0x00}, // Phase1 reactive energy -
	29: []byte{0x01, 0x1d, 0x08, 0x00}, // Phase1 apparent energy +
	30: []byte{0x01, 0x1E, 0x08, 0x00}, // Phase1 apparent energy -
	41: []byte{0x01, 0x29, 0x08, 0x00}, // Phase2 active energy +
	42: []byte{0x01, 0x2A, 0x08, 0x00}, // Phase2 active energy -
	43: []byte{0x01, 0x2B, 0x08, 0x00}, // Phase2 reactive energy +
	44: []byte{0x01, 0x2C, 0x08, 0x00}, // Phase2 reactive energy -
	49: []byte{0x01, 0x31, 0x08, 0x00}, // Phase2 apparent energy +
	50: []byte{0x01, 0x32, 0x08, 0x00}, // Phase2 apparent energy -
	61: []byte{0x01, 0x3D, 0x08, 0x00}, // Phase3 active energy +
	62: []byte{0x01, 0x3E, 0x08, 0x00}, // Phase3 active energy -
	63: []byte{0x01, 0x3F, 0x08, 0x00}, // Phase3 reactive energy +
	64: []byte{0x01, 0x46, 0x08, 0x00}, // Phase3 reactive energy -
	69: []byte{0x01, 0x47, 0x08, 0x00}, // Phase3 apparent energy +
	70: []byte{0x01, 0x48, 0x08, 0x00}, // Phase3 apparent energy -
}
